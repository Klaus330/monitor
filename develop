#!/usr/bin/env bash

if [ $# -gt 0 ]; then

    if [ "$1" == "up" ]; then
        docker-compose up --build -d

    elif [ "$1" == "start" ]; then
        shift 1
        docker-compose start "$@"

    elif [ "$1" == "stop" ]; then
        shift 1
        docker-compose stop "$@"

    elif [ "$1" == "stop-container" ]; then
        shift 1
        docker stop "$@"

    elif [ "$1" == "down" ]; then
        docker-compose down

    elif [ "$1" == "queue" ]; then
        shift 1
        docker-compose run --rm queue "$@"
        
    elif [ "$1" == "artisan" ] || [ "$1" == "art" ]; then
        shift 1
        docker-compose exec \
            app \
            php artisan "$@"

    elif [ "$1" == "composer" ] || [ "$1" == "comp" ]; then
        shift 1
        docker-compose exec \
            app \
            composer "$@"

    elif [ "$1" == "configure" ]; then
        docker-compose exec \
            app \
            composer install
        docker-compose exec app chmod -R 777 /var/www/html/storage
        docker-compose exec app php artisan key:generate
        docker-compose exec app php artisan migrate
        docker-compose exec app php artisan cache:clear

    elif [ "$1" == "test" ]; then
        shift 1
        docker-compose exec \
            app \
            ./vendor/bin/phpunit "$@"

    elif [ "$1" == "npm" ]; then
        docker-compose exec app  npm install
        docker-compose exec app  npm run dev
        # shift 1
        # docker-compose run --rm \
        #     node \
        #      npm "$@"

    elif [ "$1" == "yarn" ]; then
        shift 1
        docker-compose run --rm \
            node \
            yarn "$@"

    elif [ "$1" == "gulp" ]; then
        shift 1
        docker-compose run --rm \
            node \
            ./node_modules/.bin/gulp "$@"
    else
        docker-compose "$@"
    fi

else
    docker-compose ps
fi